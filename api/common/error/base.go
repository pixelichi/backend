package error

import (
	"fmt"
)

/*
https://datatracker.ietf.org/doc/html/rfc7807
 o  "type" (string) - A URI reference [RFC3986] that identifies the
      problem type.  This specification encourages that, when
      dereferenced, it provide human-readable documentation for the
      problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
      this member is not present, its value is assumed to be
      "about:blank".

   o  "title" (string) - A short, human-readable summary of the problem
      type.  It SHOULD NOT change from occurrence to occurrence of the
      problem, except for purposes of localization (e.g., using
      proactive content negotiation; see [RFC7231], Section 3.4).

   o  "status" (number) - The HTTP status code ([RFC7231], Section 6)
      generated by the origin server for this occurrence of the problem.

   o  "detail" (string) - A human-readable explanation specific to this
      occurrence of the problem.

   o  "instance" (string) - A URI reference that identifies the specific
      occurrence of the problem.  It may or may not yield further
      information if dereferenced.
*/

type BaseErrorResponse struct {
	Type     string `json:"type" binding:"required"`
	Title    string `json:"title" binding:"required"`
	Status   int    `json:"status" binding:"required"`
	Detail   string `json:"detail" binding:"required"`
	Instance string `json:"instance" binding:"required"`
}

func (e *BaseErrorResponse) Error() string {
	return fmt.Sprintf("[%s] %s: %s (status: %d, instance: %s)", e.Type, e.Title, e.Detail, e.Status, e.Instance)
}

func (e *BaseErrorResponse) GetType() string {
	return e.Type
}

func (e *BaseErrorResponse) GetTitle() string {
	return e.Title
}

func (e *BaseErrorResponse) GetStatus() int {
	return e.Status
}

func (e *BaseErrorResponse) GetDetail() string {
	return e.Detail
}

func (e *BaseErrorResponse) GetInstance() string {
	return e.Instance
}

func NewBaseError(errorType, title string, status int, detail, instance string) CustomError {
	return &BaseErrorResponse{
		Type:     errorType,
		Title:    title,
		Status:   status,
		Detail:   detail,
		Instance: instance,
	}
}

